@model EntityLayer.Concrete.Author


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";
}

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<a href="~/lib/jquery/dist/jquery.min.map"></a>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>

<section class="main-content-w3layouts-agileits">
    <div class="container">
        <h3 class="tittle">Yazar Kayıt Gerçekleştirme Sayfası</h3>
        <div class="inner-sec">
            <div class="login p-5 bg-light mx-auto mw-100">

                @using (Html.BeginForm("Index", "Register", FormMethod.Post))
                {


                    @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="col-md-6 mb-3">
                        <label for="validationCustom01">İsim - Soy İsim</label>
                        @Html.TextBoxFor(x => x.AuthorName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AuthorName, "", new { @class = "text-danger" })
                        @*<input type="text" class="form-control" id="validationDefault01" name="AuthorName" placeholder="" required="">*@
                    </div>

                    @* @await Component.InvokeAsync("AuthorCity");*@


                    <div class="col-md-6 mb-3">
                        <label for="validationCustom02">Mail Adresi</label>
                        @Html.TextBoxFor(x => x.AuthorMail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AuthorMail, "", new { @class = "text-danger" })
                        @*<input type="email" class="form-control" id="validationDefault02" name="AuthorMail" placeholder="" required="">*@
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="exampleInputPassword1 mb-2">Şifre Belirle</label>
                        @Html.PasswordFor(x => x.AuthorPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AuthorPassword, "", new { @class = "text-danger" })
                        @*<input type="password" class="form-control" id="password1" name="ConfirmPassword" required="">*@
                    </div>



                    <!--<div class="form-group col-md-6">
                        <label for="exampleInputPassword2 mb-2">Şifreyi Onayla</label>
                        @Html.TextBoxFor(x => x.AuthorPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AuthorPassword, "", new { @class = "text-danger" })-->
                        @*<input type="password" class="form-control" id="password2" name="ConfirmPassword" placeholder="" required="">*@
                    <!--</div>-->


                    <div class="form-group col-md-6">
                        <label for="exampleInputPassword2 mb-2">Görsel Dosya Yolu</label>
                        @Html.TextBoxFor(x => x.AuthorImage, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AuthorImage, "", new { @class = "text-danger" })
                        @*<input type="text" class="form-control" id="password2" name="AuthorImage" placeholder="" required="">*@
                    </div>


                    <div class="form-group col-md-4">
                        @await Component.InvokeAsync("AuthorCity")
                    </div>

               

                </div>
                    <button type="submit" id="btn2" class="btn btn-primary submit mb-4">Kayıt Ol !</button>
                    <p>
                        <a href="#" id="btn1">Kullanıcı sözleşmesini okudum, kabul ediyorum</a>
                    </p>
                }

            </div>
        </div>
    </div>
    <br />
    <script>
        $('#btn1').click(function () {

            swal("Kullanıcı Sözleşmesi", "Sitemize kayıt olurken girdiğiniz E-Mail adresinize haber ve bilgilendirme E-Postaları spam ölçüsüne ulaşmayacak düzeyde gönderilmeye devam edecektir. Eğer E-Posta bülteninden çıkmak isterseniz mail ileti dizisini durdurabilirsiniz. Sitemize kayıt olurken girdiğinz Mail adresiniz ve şifreleriniz KVKK'ya uygun ve şifreli olarak veritabanlarımızda saklanmaktadır.");
        });

        $('#btn2').click(function () {

            swal("Kaydınız Başarıyla Gerçekleşti !", "Aramıza Hoşgeldiniz", "success");

        });
    </script>



</section>
